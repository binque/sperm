* spanner
  - link: http://research.google.com/archive/spanner.html
  - title: Spanner: Google's Globally-Distributed Database
  - date: 2012
  - misc:
    - Spanner——Google的全球化分布式数据库 - Sun Yongyue - 博客园 http://www.cnblogs.com/sunyongyue/archive/2012/09/20/spanner_note.html
    - Google Spanner原理- 全球级的分布式数据库_EMC中国研究院_新浪轻博客_Qing http://qing.weibo.com/2294942122/88ca09aa3300221n.html
    - Google Spanner (中文版) | 厦门大学数据库实验室 | 厦门大学 | 厦门大学计算机系|数据库实验室 http://dblab.xmu.edu.cn/node/230

** Abstract
  - Spanner is Google’s scalable, multi-version, globally-distributed, and synchronously-replicated database. It is the first system to distribute data at global scale and sup-port externally-consistent distributed transactions.  *(可扩展，多版本，全局分布式，同步复制的数据库系统，扩展性到全球级别，并且支持外部一致性的分布式事务）*
  - This paper describes how Spanner is structured, its feature set, the rationale underlying various design decisions, and a novel time API that exposes clock uncertainty. （主要分为两个方面，一个方面是组织结构以及关键特性还有各种设计上的权衡，另外一个就是支持时钟不确定性的时间API）
  - This API and its implementation are critical to supporting exter-nal consistency and a variety of powerful features: non-blocking reads in the past, lock-free read-only transac-tions, and atomic schema changes, across all of Spanner.（主要是使用这个API才能够保证外部一致性以及一些非常强大的功能，non-blocking read历史数据，lock-free read-only事务，以及原子schema变化）

** Introduction
   - At the high-est level of abstraction, it is a database that shards data across many sets of Paxos state machines in data- centers spread all over the world. Replication is used for global availability and geographic locality; clients auto-matically failover between replicas. （数据是进行shard的，每个shard实例之间的同步都是通过paxos状态机来完成的，实例可能散步于世界的各个地方。replication主要是为了提供全球可用性以及地理位置上的局部性，client能够自动地在replicas之间做failover切换）
   - Spanner automati-cally reshards data across machines as the amount of data or the number of servers changes, and it automatically migrates data across machines (even across datacenters) to balance load and in response to failures. （spanner对于data shard是自动完成的，当server数量变化的时候会reshard然后重新做balance)
   - Spanner is designed to scale up to millions of machines across hun-dreds of datacenters and trillions of database rows.(扩展到百万机器，上百个数据中心，10^12 rows）
   - Spanner’s main focus is managing cross-datacenter replicated data, but we have also spent a great deal of time in designing and implementing important database features on top of our distributed-systems infrastructure（虽然spanner主要focus是在跨机房的数据replication上，但是也花了相当多的时间来在分布式结构上设计和实现很多database特性，
     - Bigtable不能够支持复杂并且变化的schema，并且对于wide-area下面不能够很好地实现强一致性
     - Megastore可以解决Bigtable这个问题但是write throughput太差（使用MVCC方式造成的冲突）
     - Spanner has evolved from a Bigtable-like versioned key-value store into a temporal multi-version database. *TODO（dirlt）：什么叫做temporal?*
     - Data is stored in schematized semi-relational tables; 数据存放在schema化的半关系表里面 *NOTE（dirlt）：table是有schema的，但是table之间的关系并不像数据库table之间那么的具有关系性，可以认为是改良吧*
     - data is versioned, and each version is automati-cally timestamped with its commit time; old versions of data are subject to configurable garbage-collection poli-cies; and applications can read data at old timestamps.  （data都通过timestamp进行version，这样允许application读取历史数据，而old version数据能够被GC清除）
     - Spanner supports general-purpose transactions, and pro-vides a SQL-based query language.（支持ACID事务，上层提供查询语言）
   - As a globally-distributed database, Spanner provides several interesting features.（在扩展性和并发方面还提供了下面几个特性）
     - First, the replication con-figurations for data can be dynamically controlled at a fine grain by applications. （application能够精确控制data方式位置以及replication方式）
       - which datacenters contain which data
       - how far data is from its users (to control read latency)
       - how far replicas are from each other (to control write la-tency)
       - how many replicas are maintained (to con-trol durability, availability, and read performance).
     - Second, Spanner has two features that are difficult to implement in a distributed database: 
       - provides externally consistent reads and writes, （读写外部一致性）
       - and globally-consistent reads across the database at a time-stamp.（全局一致性地读取历史数据）
   - These features are enabled by the fact that Spanner as-signs globally-meaningful commit timestamps to trans-actions, even though transactions may be distributed. The timestamps reflect serialization order.（上面这些特性主要是因为spanner为事务提供了全局的提交时间戳，时间戳的顺序决定了串行顺序）
   - The key enabler of these properties is a new TrueTime API and its implementation. The API directly exposes clock uncertainty, and the guarantees on Spanner’s times-tamps depend on the bounds that the implementation pro- vides. （提供全局时间戳关键就是TrueTime API，API实现上暴露了时钟的不确定性，提供当前时钟的范围）
     - If the uncertainty is large, Spanner slows down to wait out that uncertainty. Google’s cluster-management software provides an implementation of the TrueTime API. 如果这个不确定性太大的话，那么spanner就需要slowdown等待这个uncertainty降下来
     - This implementation keeps uncertainty small (gen-erally less than 10ms) by using multiple modern clock references (GPS and atomic clocks). 通过GPS和原子钟来keep uncertainty small

** Implementation
   - A Spanner deployment is called a universe. Given that Spanner manages data globally, there will be only a handful of running universes. We currently run a test/playground universe, a development/production uni-
verse, and a production-only universe.（一个spanner实例称为universe）
   - Spanner is organized as a set of zones, where each zone is the rough analog of a deployment of Bigtable servers（spanner由多个zones组成，每个zone可以认为是一个bigtable servers的部署实例）
     - Zones are the unit of administrative deploy-ment. The set of zones is also the set of locations across which data can be replicated. （zone是用管理和部署的单元， *可以认为数据的每个replication在一个zone里面最多存在一份* ）
     - Zones can be added to or removed from a running system as new datacenters are brought into service and old ones are turned off, respec-tively. （zone能够自由地进入和从数据中心移除）
     - Zones are also the unit of physical isolation: there may be one or more zones in a datacenter, for example, if different applications’ data must be partitioned across different sets of servers in the same datacenter.（zone也是物理隔离的单元，可以在一个datacenter里面存在几个zone实例，这样在一个datacenter就可以存在同一个数据的replication多份）

--------------------

file:./images/spanner-server-organization.png

   - zonemaster 选择spanserver来serve data
   - spanserver serve data
   - location proxy 用来定位spanserver location *TODO（dirlt）：confuse with zonemaster*
   - universe master和plaecment driver都是单例
     - The universe master is primarily a console that displays status information about all the zones for inter-active debugging. （汇总信息）
     - The placement driver handles auto-mated movement of data across zones on the timescale of minutes. （在zone之间进行分钟级别自动balance）
     - The placement driver periodically commu-nicates with the spanservers to find data that needs to be moved, either to meet updated replication constraints or to balance load.（直接和spanserver通信）

*** Spanserver Software Stack
file:./images/spanserver-software-stack.png

   - At the bottom, each spanserver is responsible for between 100 and 1000 instances of a data structure called a tablet.(每个spanserver管理100-1000个tablet实例）
     - tablet和bigtable tablet概念非常类似，也是map数据结构并且value存储了多个版本 *这里的tablet是否为sorted-map?*
     - tablet’s state is stored in set of B-tree-like files and a write-ahead log, all on a distributed file system called Colossus (the successor to the Google File System) 状态保存在文件以及log上面存储在GFS2
   - To support replication, each spanserver implements a single Paxos state machine on top of each tablet. Each state machine stores its metadata and log in its corresponding tablet. （每个tablet上面实现paxos实例，状态机的实例将metadata以及operation log保存在管理的tablet里面）
     - Our Paxos implementation supports long-lived leaders with time-based leader leases, whose length defaults to 10 seconds. paxos实现支持长期存在的leader，使用time lease来进行控制，默认是10s
     - Our implementation of Paxos is pipelined, so as to improve Spanner’s throughput in the presence of WAN latencies; but writes are applied by Paxos in order 当前的paxos的write是pipeline的来降低WAN的延迟，但是对于每个write都是in order的。
     - Writes must initiate the Paxos protocol at the leader; reads access state directly from the underlying tablet at any replica that is sufficiently up-to-date. The set of replicas is collectively a Paxos group.（所有对于tablet的write都是通过paxos leader来发起的，读取可以在任意的replicas上面，replicas组成一个paxos group. *NOTE(dirlt):使用leader模式可以有效地减少冲突*
   - At every replica that is a leader, each spanserver im-plements a lock table to implement concurrency control. The lock table contains the state for two-phase lock-ing: it maps ranges of keys to lock states. Operations that require synchronization, such as transactional reads, acquire locks in the lock table; other operations bypass the lock table. （在leader上面实现了一个lock table来实现并发控制，使用了2PC的方式来控制提交，存放了key->lock state的映射。对于那些需要同步的操作比如事物读的话那么需要去尝试锁表，否则其他的操作都可以绕过lock table） *NOTE（dirlt）：lock table主要解决一个tablet内部的事务*
   - At every replica that is a leader, each spanserver also implements a transaction manager to support distributed transactions. The transaction manager is used to imple-ment a participant leader. the other replicas in the group will be referred to as participant slaves （paxos group会选举出一个leader来做分布式事务，和paxos group内部的leader作用相同，主要是解决跨tablet的事务） *NOTE（dirlt）：这个leader是long-lived的吗？*
     - If a transac-tion involves only one Paxos group (as is the case for most transactions), it can bypass the transaction manager, since the lock table and Paxos together provide transac- tionality. （如果操作只是发生在一个paxos group上面的话，那么可以绕过transaction manager)
     - If a transaction involves more than one Paxos group, those groups’ leaders coordinate to perform two-phase commit.(如果涉及到多个paxos group的话，那么就需要leader来发起2PC）
     -  The state of each trans-action manager is stored in the underlying Paxos group (and therefore is replicated).（transaction manager的log记录在底层的paxos group)
	
*** Directories and Placement
file:./images/spanner-directory-movement.png

   - On top of the bag of key-value mappings, the Spanner implementation supports a bucketing abstraction called a directory, which is a set of contiguous keys that share a common prefix.（directory定义为连续key的集合，对应到directory就可以认为是一个region，但是一个tablet可以包含多个directory)
   - A directory is the unit of data placement. All data in a directory has the same replication configuration. When data is moved between Paxos groups, it is moved direc-tory by directory (directory是data placement的最小单元，一个directory里面的data有相同的replication configuration.在paxos group之间移动的话也是按照directory作为单位移动的）
     - Spanner might move a directory to shed load from a Paxos group; 将dir移动到低负载的paxos group上面
     - to put directories that are frequently accessed together into the same group; 将经常一起访问的dir放在一个group上面
     - or to move a directory into a group that is closer to its accessors. 将dir放在离accessor近的位置
     - Directories can be moved while client operations are ongoing. 在dir迁移的时候不会影响client访问
     - One could expect that 50MB directory can be moved in a few seconds. 传输50MB的目录大概需要几秒钟就可以完成
   - The fact that a Paxos group may contain multiple di-rectories implies that a Spanner tablet is different from a Bigtable tablet: the former is not necessarily a single lexicographically contiguous partition of the row space. Instead, a Spanner tablet is a container that may encap-sulate multiple partitions of the row space. We made this decision so that it would be possible to colocate multiple directories that are frequently accessed together.（一个tablet可包含多个directory可以让多个频繁访问的directories聚集在一起提高访问效率）
   - Movedir is the background task used to move direc-tories between Paxos groups. Movedir is also used to add or remove replicas to Paxos groups. Movedir is not implemented as a single transaction, so as to avoid blocking ongoing reads and writes on a bulky data move. Instead, movedir registers the fact that it is starting to move data and moves the data in the background. When it has moved all but a nominal amount of the data, it uses a transaction to atomically move that nominal amount and update the metadata for the two Paxos groups.(
   - A directory is also the smallest unit whose geographic-replication properties (or placement, for short) can be specified by an application. The design of our placement-specification language separates responsibil-ities for managing replication configurations. Adminis-trators control two dimensions: the number and types of replicas, and the geographic placement of those replicas.（directory也是能够制定replication方案的最小单元，replication方案包括两个维度replicas的数目以及replicas的地理位置）
   - For expository clarity we have over-simplified. In fact, Spanner will shard a directory into multiple fragments if it grows too large. Fragments may be served from different Paxos groups (and therefore different servers). Movedir actually moves fragments, and not whole direc-tories, between groups.（ *NOTE（dirlt）：我觉得这个是否可以理解成为directory能够自己进行分裂？因为既然directory是placement的最小单元，那似乎没有必要再引入fragement这个概念了！* ）




*** Data Model
** TrueTime
** Concurrency Control
*NOTE(dirlt):并发控制是关键部分，但是这个部分我没有仔细阅读，主要是对paxos没有很好的理解*

** Evaluation
*** Microbenchmarks
*** Availability
*** TrueTime
*** F1

** Related Work
** Future Work
** Conclusions
