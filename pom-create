#!/usr/bin/env python
#coding:utf-8
#Copyright (C) dirlt

POM_TEMPLATE="""<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>%(groupId)s</groupId>
  <artifactId>%(artifactId)s</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>%(project)s</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
    </dependency>

    <!-- <dependency> -->
    <!--   <groupId>com.google.protobuf</groupId> -->
    <!--   <artifactId>protobuf-java</artifactId> -->
    <!--   <version>2.3.0</version> -->
    <!-- </dependency> -->

    <!-- <dependency> -->
    <!--   <groupId>org.apache.hadoop</groupId> -->
    <!--   <artifactId>hadoop-core</artifactId> -->
    <!--   <version>0.20.2-cdh3u3</version> -->
    <!-- </dependency> -->

    <!-- <dependency> -->
    <!--   <groupId>org.apache.hbase</groupId> -->
    <!--   <artifactId>hbase</artifactId> -->
    <!--   <version>0.90.4-cdh3u2</version> -->
    <!-- </dependency> -->

    <!-- <dependency> -->
    <!--   <groupId>org.apache.hadoop</groupId> -->
    <!--   <artifactId>hadoop-test</artifactId> -->
    <!--   <version>0.20.2-cdh3u2</version> -->
    <!--   <scope>test</scope> -->
    <!-- </dependency> -->

    <!-- <dependency> -->
    <!--   <groupId>com.apache.hbase</groupId> -->
    <!--   <artifactId>hbase-test</artifactId> -->
    <!--   <version>0.90.4-cdh3u2</version> -->
    <!--   <scope>test</scope> -->
    <!-- </dependency> -->

    <!-- <dependency> -->
    <!--   <groupId>com.twitter</groupId> -->
    <!--   <artifactId>elephant-bird</artifactId> -->
    <!--   <version>2.1.2</version> -->
    <!-- </dependency> -->

    <!-- <dependency> -->
    <!--   <groupId>com.hadoop.gplcompression</groupId> -->
    <!--   <artifactId>Hadoop-GPL-Compression</artifactId> -->
    <!--   <version>0.4.15</version> -->
    <!-- </dependency> -->

    <!-- <dependency> -->
    <!--   <groupId>com.google.guava</groupId> -->
    <!--   <artifactId>guava</artifactId> -->
    <!--   <version>10.0.1</version> -->
    <!-- </dependency> -->

    <!-- <dependency> -->
    <!--   <groupId>org.mongodb</groupId> -->
    <!--   <artifactId>mongo-java-driver</artifactId> -->
    <!--   <version>2.7.3</version> -->
    <!-- </dependency> -->

    <!-- <dependency> -->
    <!--   <groupId>org.mongodb</groupId> -->
    <!--   <artifactId>bson</artifactId> -->
    <!--   <version>2.7.3</version> -->
    <!-- </dependency> -->
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>    

      <plugin>  
        <groupId>org.apache.maven.plugins</groupId>  
        <artifactId>maven-dependency-plugin</artifactId>  
        <executions>
          <execution>  
            <id>copy-dependencies</id>  
            <phase>compile</phase>
            <goals>  
              <goal>copy-dependencies</goal>  
            </goals>  
            <configuration> 
              <outputDirectory>${project.build.directory}/lib</outputDirectory>  
              <overWriteReleases>false</overWriteReleases>  
              <overWriteSnapshots>false</overWriteSnapshots>  
              <overWriteIfNewer>true</overWriteIfNewer>  
            </configuration>  
          </execution>  
        </executions>  
      </plugin>  

            <!-- <plugin> -->
            <!--     <artifactId>maven-assembly-plugin</artifactId> -->
            <!--     <configuration> -->
            <!--         <descriptorRefs> -->
            <!--             <descriptorRef>jar-with-dependencies</descriptorRef> -->
            <!--         </descriptorRefs> -->
            <!--     </configuration> -->
            <!--     <executions> -->
            <!--       <execution> -->
            <!--         <id>make-assembly</id>  -->
            <!--         <phase>package</phase> -->
            <!--         <goals> -->
            <!--           <goal>single</goal> -->
            <!--         </goals> -->
            <!--       </execution> -->
            <!--     </executions> -->
            <!-- </plugin> -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <executable>java</executable>                  
          <arguments>
            <argument>-cp</argument>
            <classpath/>
            <argument>%(groupId)s.%(artifactId)s.Main</argument>
          </arguments>
        </configuration>
      </plugin>

      <!-- <plugin> -->
      <!--   <groupId>org.codehaus.mojo</groupId> -->
      <!--   <artifactId>build-helper-maven-plugin</artifactId> -->
      <!--   <executions> -->
      <!--     <execution> -->
      <!--       <phase>generate-sources</phase> -->
      <!--       <goals><goal>add-source</goal></goals> -->
      <!--       <configuration> -->
      <!--         <sources> -->
      <!--           <source>src/main/gen-java</source> -->
      <!--           <source>src/main/resources</source> -->
      <!--         </sources> -->
      <!--       </configuration> -->
      <!--     </execution> -->
      <!--   </executions> -->
      <!-- </plugin> -->

      <!-- <plugin> -->
      <!--   <artifactId>maven-antrun-plugin</artifactId> -->
      <!--   <executions> -->
      <!--     <execution> -->
      <!--       <id>generate-sources</id> -->
      <!--       <phase>generate-sources</phase> -->
      <!--       <configuration> -->
      <!--         <tasks> -->
      <!--           <mkdir dir="src/main/gen-java"/> -->
      <!--           <exec executable="protoc"> -->
      <!--             <arg value="src/main/protobuf/message.proto"/> -->
      <!--           </exec> -->
      <!--         </tasks> -->
      <!--         <sourceRoot>src/main/gen-java</sourceRoot> -->
      <!--       </configuration> -->
      <!--       <goals> -->
      <!--         <goal>run</goal> -->
      <!--       </goals> -->
      <!--     </execution> -->
      <!--   </executions> -->
      <!-- </plugin> -->
    </plugins>
  </build>

</project>
"""

SRC_TEMPLATE="""/* coding:utf-8
 * Copyright (C) dirlt
 */

package %(groupId)s.%(artifactId)s;

import java.io.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import org.apache.log4j.Logger;

public class Main {
  private static final Logger LOG  = Logger.getLogger(Main.class);
  public static void main(String[] args) {
    // TODO(dirlt):
  }
}
"""

TEST_TEMPLATE="""/* coding:utf-8
 * Copyright (C) dirlt
 */

package %(groupId)s.%(artifactId)s;

import org.junit.*;
import static org.junit.Assert.*;

import java.io.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import org.apache.log4j.Logger;

public class MainTest {
  private static final Logger LOG  = Logger.getLogger(Main.class);
  
  @Before
  public void setUp() throws Exception {
    // TODO(dirlt):
  }
  
  @After
  public void tearDown() throws Exception {
    // TODO(dirlt):
  }

  @Test
  public void testMain() throws Exception {
    // TODO(dirlt):
  }
}
"""

LOG4J="""#
# Copyright (C) dirlt
#

log4j.rootCategory=INFO, stdout , FILE

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%%d %%p [%%c] - <%%m>%%n

log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.File=/tmp/%(artifactId)s.log
log4j.appender.FILE.Append=true
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%%d %%p [%%c] - <%%m>%%n

# log4j.appender.FILE=org.apache.log4j.RollingFileAppender
# log4j.appender.FILE.File=/tmp/%(artifactId)s.log
# log4j.appender.FILE.MaxFileSize=1GB
# log4j.appender.FILE.MaxBackupIndex=1
# log4j.appender.FILE.Append=true
# log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
# log4j.appender.FILE.layout.ConversionPattern=%%d %%p [%%c] - <%%m>%%n

"""

import os
def generate(project,groupId,artifactId):
    cps=groupId.split('.')
    cps.append(artifactId)
    os.system('mkdir -p %s'%(project))
    open('%s/pom.xml'%(project),'w').write(POM_TEMPLATE%(locals()))
    os.system('mkdir -p %s/src/main/java/%s/'%(project,'/'.join(cps)))
    os.system('mkdir -p %s/src/test/java/%s/'%(project,'/'.join(cps)))
    os.system('mkdir -p %s/src/main/resources/'%(project))
    os.system('mkdir -p %s/src/test/resources/'%(project))
    open('%s/src/main/java/%s/Main.java'%(project,'/'.join(cps)),'w').write(SRC_TEMPLATE%(locals()))
    open('%s/src/test/java/%s/MainTest.java'%(project,'/'.join(cps)),'w').write(TEST_TEMPLATE%(locals()))
    open('%s/src/main/resources/log4j.properties'%(project),'w').write(LOG4J%(locals()))
    open('%s/src/test/resources/log4j.properties'%(project),'w').write(LOG4J%(locals()))

import sys
if __name__=='__main__':
    if(len(sys.argv)!=4):
        print 'create a new project in maven'
        print 'usage:%s project-name groupId artifactId'%(sys.argv[0])
    else:
        generate(sys.argv[1],sys.argv[2],sys.argv[3])
