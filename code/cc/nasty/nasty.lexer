%{

#include <string>
#include "nasty.h"
using namespace sperm::nasty;
#include "nasty.y.hh"  

#define SaveToken(type) do {\
yylval->token = new(std::nothrow) Token(type, yytext, yyleng, yylloc->first_line, yylloc->first_column);\
}while(0)

#define YY_DECL int yylex(YYSTYPE* yylval_param, YYLTYPE* yylloc_param, yyscan_t yyscanner, Parser* parser)

%}

%option 8bit
%option reentrant
%option bison-bridge
%option bison-locations
%option noyywrap
%option warn
%option nodefault
%option verbose
%option header-file="nasty.l.hh"
%option outfile="nasty.l.cc"
     
%%
     
"(" { return LBRACE; }
")" { return RBRACE; }
'[^']+' { SaveToken(Token::RS); return RS; }
\"(\\.|[^\\"])*\"	{ SaveToken(Token::SR); return SR; }
[a-zA-Z_][a-zA-Z0-9_]* { SaveToken(Token::ID); return ID; }
[0-9]+\.[0-9]* { SaveToken(Token::DBL); return DBL; }
[0-9]+  { SaveToken(Token::INT); return INT; }
[ \t\n] {}
. yyterminate();

%%
