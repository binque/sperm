大家好，一直想整理一下编程语言要素。所谓编程语言要素就是说，一旦我们对于这些编程语言的要素掌握之后，我们就可以用这个语言做一些事情了。
编程语言要素必须是基本的(atomic)，然后我们在学习语言的时候，首先学习这些基本的内容之后，就可以开动了。不要使用形式的东西来概括，
必须是一些可以put into practice的东西

基本类型 // 比如字符串如何表示等
复合结构 // 如何将基本类型复合出来
内存管理 // 如何进行内存分配释放
程序结构 // 变量作用域，变量声明，类的访问权限，程序结构
语言特有特性 // 反射，动态代码生成，continuation
工程组织性 // 如何组织一个大的项目，如何服用代码比如库
文件系统 // 如何操作文件，读取特定字节等
并发控制 // 比如进程，线程，锁
网络通信 // 通讯设施
C/C++扩展 // 如何使用C/C++来编写扩展提高效率

大数据传输或者是写磁盘需要加上额外校验。
如果数据不影响现在发展，那么就不需要删除。

http://clojure.org/
http://java.ociweb.com/mark/clojure/article.html
http://java.ociweb.com/mark/clojure/
http://java.ociweb.com/mark/stm/article.html
http://clojure.github.com/clojure/

====================================================
http://www.clisp.org/ // homepage
http://www.clisp.org/summary.html // summary
http://www.lisp.org/index.html // McCarthy
http://ftp.gnu.org/pub/gnu/clisp/ // sofware
http://www.clisp.org/impnotes/index.html // 文档 （不好读）
http://www.clisp.org/resources.html // 资源 
http://www.clisp.org/impnotes/faq.html // FAQ 
http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/cltl2.html(Common Lisp The Language 2nd).(参考)
http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/FrontMatter/index-text.html (hyperspec) (规范文档)
http://zh.wikipedia.org/zh-cn/Common_Lisp
http://www.gigamonkeys.com/book/ （pratcicle common lisp)

